name: Scheduled Update

on:
  schedule:
    # Run daily at 2 AM UTC
    - cron: '0 2 * * *'
  workflow_dispatch:
    inputs:
      force_update:
        description: 'Force update even if no changes detected'
        required: false
        default: 'false'
        type: boolean

jobs:
  check-updates:
    name: Check for Updates
    runs-on: ubuntu-latest
    
    outputs:
      should_update: ${{ steps.check.outputs.should_update }}
      changes_detected: ${{ steps.check.outputs.changes_detected }}
      
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          
      - name: Check for source file changes
        id: check
        run: |
          # Check if source file was modified in the last 24 hours
          LAST_COMMIT=$(git log -1 --format="%ct" -- adblock-filters-list/adblock-filters-list.txt)
          CURRENT_TIME=$(date +%s)
          TIME_DIFF=$((CURRENT_TIME - LAST_COMMIT))
          HOURS_DIFF=$((TIME_DIFF / 3600))
          
          echo "Last modification: $HOURS_DIFF hours ago"
          
          SHOULD_UPDATE="false"
          CHANGES_DETECTED="false"
          
          # Update if source file changed in last 25 hours or force update is requested
          if [[ $HOURS_DIFF -lt 25 ]] || [[ "${{ github.event.inputs.force_update }}" == "true" ]]; then
            SHOULD_UPDATE="true"
            CHANGES_DETECTED="true"
            echo "üìù Changes detected or force update requested"
          else
            echo "üìÖ No recent changes detected"
          fi
          
          # Always update on manual trigger
          if [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
            SHOULD_UPDATE="true"
            echo "üñ±Ô∏è Manual trigger detected"
          fi
          
          echo "should_update=$SHOULD_UPDATE" >> $GITHUB_OUTPUT
          echo "changes_detected=$CHANGES_DETECTED" >> $GITHUB_OUTPUT

  generate-lists:
    name: Generate Updated Lists
    runs-on: ubuntu-latest
    needs: [check-updates]
    if: needs.check-updates.outputs.should_update == 'true'
    
    permissions:
      contents: write
      pull-requests: write
      
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Build project
        run: npm run build
        
      - name: Generate adblock lists
        run: npm start
        
      - name: Check if lists changed
        id: changes
        run: |
          # Check if generated files are different from committed ones
          if git diff --quiet subscription/; then
            echo "No changes in generated files"
            echo "files_changed=false" >> $GITHUB_OUTPUT
          else
            echo "Changes detected in generated files"
            echo "files_changed=true" >> $GITHUB_OUTPUT
            
            # Show what changed
            echo "Changed files:"
            git diff --name-only subscription/
            
            # Show statistics
            echo "File sizes:"
            ls -lh subscription/
          fi
          
      - name: Generate update summary
        if: steps.changes.outputs.files_changed == 'true'
        id: summary
        run: |
          # Count rules in each file
          UBLOCK_RULES=$(grep -v '^!' subscription/thai-adblock-list-ublockorigin.txt | grep -v '^$' | wc -l)
          ABP_RULES=$(grep -v '^!' subscription/thai-adblock-list-adblockplus.txt | grep -v '^$' | wc -l)
          ADGUARD_RULES=$(grep -v '^!' subscription/thai-adblock-list-adguard.txt | grep -v '^$' | wc -l)
          DOMAINS_COUNT=$(grep -v '^!' subscription/domains.txt | grep -v '^$' | wc -l)
          
          # Generate commit message
          COMMIT_MSG="üì¶ Automated list update - $(date +%Y-%m-%d)

          üìä Statistics:
          - uBlock Origin: $UBLOCK_RULES rules
          - Adblock Plus: $ABP_RULES rules  
          - AdGuard: $ADGUARD_RULES rules
          - Domains: $DOMAINS_COUNT entries
          
          ü§ñ Generated automatically by scheduled workflow"
          
          echo "COMMIT_MSG<<EOF" >> $GITHUB_OUTPUT
          echo "$COMMIT_MSG" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
          
          # Statistics for PR
          echo "UBLOCK_RULES=$UBLOCK_RULES" >> $GITHUB_OUTPUT
          echo "ABP_RULES=$ABP_RULES" >> $GITHUB_OUTPUT
          echo "ADGUARD_RULES=$ADGUARD_RULES" >> $GITHUB_OUTPUT
          echo "DOMAINS_COUNT=$DOMAINS_COUNT" >> $GITHUB_OUTPUT
          
      - name: Create Pull Request
        if: steps.changes.outputs.files_changed == 'true'
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: ${{ steps.summary.outputs.COMMIT_MSG }}
          committer: github-actions[bot] <41898282+github-actions[bot]@users.noreply.github.com>
          author: github-actions[bot] <41898282+github-actions[bot]@users.noreply.github.com>
          branch: automated-update-${{ github.run_number }}
          delete-branch: true
          title: "üì¶ Automated Adblock List Update - ${{ github.run_number }}"
          body: |
            ## ü§ñ Automated Update
            
            This PR contains automatically generated adblock list updates.
            
            ### üìä Statistics
            
            | Format | Rules | File Size |
            |--------|-------|-----------|
            | uBlock Origin | ${{ steps.summary.outputs.UBLOCK_RULES }} | $(du -h subscription/thai-adblock-list-ublockorigin.txt | cut -f1) |
            | Adblock Plus | ${{ steps.summary.outputs.ABP_RULES }} | $(du -h subscription/thai-adblock-list-adblockplus.txt | cut -f1) |
            | AdGuard | ${{ steps.summary.outputs.ADGUARD_RULES }} | $(du -h subscription/thai-adblock-list-adguard.txt | cut -f1) |
            | Domains | ${{ steps.summary.outputs.DOMAINS_COUNT }} | $(du -h subscription/domains.txt | cut -f1) |
            
            ### üîç Changes
            
            - **Trigger**: ${{ github.event_name == 'schedule' && 'Scheduled update' || 'Manual trigger' }}
            - **Source Changes**: ${{ needs.check-updates.outputs.changes_detected == 'true' && 'Yes' || 'No' }}
            - **Generated**: $(date -u +"%Y-%m-%d %H:%M:%S UTC")
            - **Commit**: ${{ github.sha }}
            
            ### ‚úÖ Quality Checks
            
            - [x] TypeScript compilation successful
            - [x] All tests passed
            - [x] Lists generated successfully
            - [x] Comment filtering applied
            - [x] No date-URL comments included
            
            ### üöÄ Ready for Review
            
            This PR is automatically generated and ready for merge if the changes look correct.
            
            ---
            
            *Generated by [Scheduled Update Workflow](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})*
          labels: |
            automated
            update
            adblock-lists
          reviewers: |
            PhyschicWinter9
          
      - name: Auto-merge if minor changes
        if: steps.changes.outputs.files_changed == 'true'
        run: |
          # Check if changes are only rule additions/modifications (not structural)
          CHANGED_FILES=$(git diff --name-only subscription/)
          
          # Count the number of line changes
          ADDITIONS=$(git diff --numstat subscription/ | awk '{sum+=$1} END {print sum+0}')
          DELETIONS=$(git diff --numstat subscription/ | awk '{sum+=$2} END {print sum+0}')
          
          echo "üìä Change summary:"
          echo "- Files changed: $(echo "$CHANGED_FILES" | wc -l)"
          echo "- Lines added: $ADDITIONS"
          echo "- Lines deleted: $DELETIONS"
          
          # If changes are minimal and only in list files, consider auto-merge
          if [[ $ADDITIONS -lt 100 ]] && [[ $DELETIONS -lt 50 ]]; then
            echo "‚úÖ Changes appear minimal and safe for auto-merge"
            echo "üîÑ Consider enabling auto-merge for this PR"
          else
            echo "‚ö†Ô∏è Significant changes detected, manual review recommended"
          fi

  notify-completion:
    name: Notify Update Status
    runs-on: ubuntu-latest
    needs: [check-updates, generate-lists]
    if: always()
    
    steps:
      - name: Update Status
        run: |
          if [[ "${{ needs.check-updates.outputs.should_update }}" == "true" ]]; then
            if [[ "${{ needs.generate-lists.result }}" == "success" ]]; then
              echo "‚úÖ Scheduled update completed successfully"
              echo "üì¶ Adblock lists have been updated"
            else
              echo "‚ùå Scheduled update failed"
              echo "üîç Check workflow logs for details"
            fi
          else
            echo "üìÖ No updates needed - source files unchanged"
            echo "‚è±Ô∏è Next check: $(date -d '+1 day' -u +'%Y-%m-%d %H:%M UTC')"
          fi